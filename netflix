# LIBRARIES
library(dplyr)
library(tidyr)
library(lubridate)
library(zoo)
library(ggplot2)# READING DATA FROM CSV DOWNLOADED FROM NETFLIX ACCOUNT
setwd("C:/Users/nmutai/Desktop/Netflix")

minetflix <- read.csv("NetflixViewingHistory.csv") 
str(minetflix)
minetflix$Date <- dmy(minetflix$Date)


# SEPARATE TITLE COLUMN IN TITLE OF TV SERIES, SEASON AND EPISODE TITLE
minetflix_serie <- minetflix %>%
    separate(col = Title, into = c("title", "temporada", "titulo_episodio"), sep = ': ')# REMOVE OCCURRENCES WHERE SEASON AND EPISODE ARE EMPTY (BECAUSE THEY ARE NOT TV SERIES)
minetflix_serie <- minetflix_serie[!is.na(minetflix_serie$temporada),]
minetflix_serie <- minetflix_serie[!is.na(minetflix_serie$titulo_episodio),]# REGISTRO DE NÚMERO DE EPISODIOS VISTOS POR DÍA, POR SERIE
maratones_minetflix <- minetflix_serie %>%
    count(title, Date)# LET'S CONSIDER "BINGE-WATCHING" 6 OR MORE EPISODES PER DAY AND SORT BY DATE
maratones_minetflix <- maratones_minetflix[maratones_minetflix$n >= 6,]
maratones_minetflix
maratones_minetflix <- maratones_minetflix[order(maratones_minetflix$Date),]
maratones_minetflix



# GROUPING DATA BY TV SERIES TITLE AND SORTING BY NUMBER OF EPISODES VIEWED
maratones_minetflix_todas <- maratones_minetflix %>% 
    group_by(title) %>% 
    summarise(n = sum(n)) %>%
    arrange(desc(n))# PLOTTING TOP 10 OF BINGE-WATCHING TV SERIES
maratones_minetflix_top <- maratones_minetflix_todas %>% 
    top_n(10) %>%
    ggplot(aes(x = reorder(title, n), y = n)) +
    geom_col(fill = "#0097d6") +
    coord_flip() +
    ggtitle("Top 10 most watched series in marathon on my Netflix "," 4 or more episodes per day") +
    labs(x = "Series on Netflix", y = "Total Episodes Watched ") +
    theme_minimal()
maratones_minetflix_top


# EPISODES PER DAY
netflix_episodios_dia <- minetflix %>%
    count(Date) %>%
    arrange(desc(n))# PLOTTING EPISODES PER DAY
netflix_episodios_dia_plot <- ggplot(aes(x = Date, y = n, color = n), data = netflix_episodios_dia) +
    geom_col(color = c("#f16727")) +
    theme_minimal() +
    ggtitle("Episodes seen on my Netflix per day "," History from 2016 to 2020") +
    labs(x = "Date", y = "Episodes watched") 
netflix_episodios_dia_plot




# CALENDAR WITH NUMBER OF EPISODES SEEN PER DAY IN HEATMAP
netflix_episodios_dia <- netflix_episodios_dia[order(netflix_episodios_dia$Date),]
netflix_episodios_dia$diasemana <- wday(netflix_episodios_dia$Date)
netflix_episodios_dia$diasemanaF <- weekdays(netflix_episodios_dia$Date, abbreviate = T)
netflix_episodios_dia$mesF <- months(netflix_episodios_dia$Date, abbreviate = T)# YOU DON'T NEED TO RENAME NECESSARILY IN SPANISH DAYS OF THE WEEK AND MONTHS
netflix_episodios_dia$diasemanaF <-factor(netflix_episodios_dia$diasemana, levels = rev(1:7), labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")),ordered = TRUE)
netflix_episodios_dia$mesF <- factor(month(netflix_episodios_dia$Date),levels = as.character(1:12), labels = c("Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"),ordered = TRUE)
netflix_episodios_dia$añomes <- factor(as.yearmon(netflix_episodios_dia$Date)) 
netflix_episodios_dia$semana <- as.numeric(format(netflix_episodios_dia$Date,"%W"))
netflix_episodios_dia$semanames <- ceiling(day(netflix_episodios_dia$Date) / 7)
netflix_episodios_dia_calendario <- ggplot(netflix_episodios_dia, aes(semanames, diasemanaF, fill = netflix_episodios_dia$n)) + 
    geom_tile(colour = "white") + 
    facet_grid(year(netflix_episodios_dia$Date) ~ mesF) + 
    scale_fill_gradient(low = "#FFD000", high = "#FF1919") + 
    ggtitle("Episodes viewed per day on my Netflix "," Heatmap by day of the week, month and year") +
    labs(x = "Week number", y = "Weekday") +
    labs(fill = "No.Episodes")
netflix_episodios_dia_calendario



# FREQUENCY OF ACTIVITY IN MY NETFLIX ACCOUNT PER DAY
vista_dia <- netflix_episodios_dia %>%
    count(diasemanaF)
vista_dia
vista_dia_plot <- vista_dia %>% 
    ggplot(aes(diasemanaF, n)) +
    geom_col(fill = "#5b59d6") +
    coord_polar()  +
    theme_minimal() +
    theme(axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          axis.text.x = element_text(face = "bold"),
          plot.title = element_text(size = 16, face = "bold")) +
    ggtitle("Frequency of episodes seen "," Activity by day of the week on my Netflix")
vista_dia_plot





# FREQUENCY OF ACTIVITY IN MY NETFLIX ACCOUNT PER MONTH
vista_mes <- netflix_episodios_dia %>%
    count(mesF)
vista_mes
vista_mes_plot <- vista_mes %>% 
    ggplot(aes(mesF, n)) +
    geom_col(fill = "#808000") +
    coord_polar()  +
    theme_minimal() +
    theme(axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          axis.text.x = element_text(face = "bold"),
          plot.title = element_text(size = 18, face = "bold")) +
    ggtitle("Frequency of episodes seen "," Activity per month on my Netflix") 
vista_mes_plot





# FREQUENCY OF ACTIVITY IN MY NETFLIX ACCOUNT PER YEAR
vista_años <- netflix_episodios_dia %>%
    count(añomes)
vista_años

vista_años_plot <- vista_años %>% 
    ggplot(aes(añomes, n)) +
    geom_col(fill = "#1a954d") +
    coord_polar()  +
    theme_minimal() +
    theme(axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          axis.text.x = element_text(face = "bold"),
          plot.title = element_text(size = 18, face = "bold")) +
    ggtitle("Frequency of episodes seen "," Activity by month of the year on my Netflix")
vista_años_plot
